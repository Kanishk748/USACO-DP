#include<bits/stdc++.h>
using namespace std;
#define int long long


int32_t main()
{
	freopen("time.in", "r", stdin);
	freopen("time.out", "w", stdout);
	int n, m, c, a, b;
	cin >> n >> m >> c;
	int costs[n];
	for (int i = 0; i < n; i++)cin >> costs[i];
	vector<int> adj[m + 1];
	vector<pair<int, int>> edges;
	for (int i = 0; i < m; i++)
	{
		cin >> a >> b;
		edges.push_back(make_pair(a, b));
	}
	int dp[n + 1][1001];
	memset(dp, -1, sizeof dp); // -1 shows not ready to use..
	dp[1][0] = 0; //base case at 0th time for city 1..

	int maxi = 0;
	for (int t = 1; t <= 1000; t++)
	{
		for (auto x : edges)
		{
			int u = x.first;
			int v = x.second;
			if (dp[u][t - 1] != -1)dp[v][t] = max(dp[v][t], costs[v - 1] + dp[u][t - 1]);
		}
		maxi = max(maxi, dp[1][t] - c * t * t); // calculating max for each time..
	}
	cout << maxi << endl;

}
